# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AuthenticateInput {
  email: String!
  password: String!
}

type AuthenticateModel {
  accessToken: ID!
}

type Author {
  email: String!
  id: ID!
  name: String!
  phone: String!
  posts: [Post!]!
}

type AuthorModel {
  author: Author!
}

type AuthorsModel {
  authors: [Author!]!
}

input CreateAuthorInput {
  email: String!
  name: String!
  password: String!
  phone: String!
}

input CreatePostInput {
  category: PostCategoryEnum!
  content: String!
  description: String
  title: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DeprivePostInput {
  postId: ID!
}

input ListAuthorsInput {
  emailContains: String
  nameContains: String
}

input ListPostsInput {
  authorIdEquals: ID
  categoryEquals: PostCategoryEnum
  publish: Boolean
  tagEquals: String
  titleContains: String
}

type Mutation {
  authenticate(authenticateInput: AuthenticateInput!): AuthenticateModel!
  createAuthor(createAuthorInput: CreateAuthorInput!): AuthorModel!
  createPost(createPostInput: CreatePostInput!): PostModel!
  deleteAuthor: Boolean!
  deprivePost(deprivePostInput: DeprivePostInput!): Boolean!
  publishPost(publishPostInput: PublishPostInput!): Boolean!
  updateAuthor(updateAuthorInput: UpdateAuthorInput!): AuthorModel!
  updatePost(updatePostInput: UpdatePostInput!): PostModel!
}

type Post {
  author: Author!
  authorId: String!
  category: PostCategoryEnum!
  content: String!
  description: String
  id: ID!
  publishedAt: DateTime
  tag: String!
  title: String!
}

"""Available post categories on model"""
enum PostCategoryEnum {
  fashion
  games
  nature
  social
  technology
}

type PostModel {
  post: Post!
}

type PostsModel {
  posts: [Post!]!
}

input PublishPostInput {
  postId: ID!
}

type Query {
  listAuthors(listAuthorsInput: ListAuthorsInput): AuthorsModel!
  listPosts(listPostsInput: ListPostsInput): PostsModel!
  showAuthor: AuthorModel!
  showPost(showPostInput: ShowPostInput!): PostModel!
}

input ShowPostInput {
  postId: ID!
}

input UpdateAuthorInput {
  email: String!
  name: String!
  password: String!
  phone: String!
}

input UpdatePostInput {
  category: PostCategoryEnum!
  content: String!
  description: String
  postId: ID!
  title: String!
}